$date
  Sun Nov 19 02:46:55 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module tb_sequential_multiplier $end
$var reg 1 ! clk $end
$var reg 1 " st $end
$var reg 1 # done1 $end
$var reg 6 $ mplier[5:0] $end
$var reg 6 % mcand[5:0] $end
$var reg 12 & product1[11:0] $end
$scope module dut $end
$var reg 1 ' clk $end
$var reg 1 ( st $end
$var reg 6 ) mplier[5:0] $end
$var reg 6 * mcand[5:0] $end
$var reg 1 + done $end
$var reg 12 , product[11:0] $end
$var integer 32 - estado_act $end
$var integer 32 . estado_sig $end
$var integer 32 / cnt_act $end
$var integer 32 0 cnt_sig $end
$var reg 1 1 k $end
$var reg 1 2 m $end
$var reg 13 3 acu_act[12:0] $end
$var reg 13 4 acu_sig[12:0] $end
$var reg 1 5 load $end
$var reg 1 6 ad $end
$var reg 1 7 sh $end
$var reg 7 8 suma[6:0] $end
$var reg 6 9 acu_suma[5:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
1"
0#
b001011 $
b011011 %
bUUUUUUUUUUUU &
0'
1(
b001011 )
b011011 *
0+
bUUUUUUUUUUUU ,
b0 -
b1 .
b0 /
b0 0
U1
U2
bUUUUUUUUUUUUU 3
b0000000001011 4
15
06
07
bXXXXXXX 8
bUUUUUU 9
